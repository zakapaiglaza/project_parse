"use strict";
// tslint:disable:member-ordering
Object.defineProperty(exports, "__esModule", { value: true });
class XPathNamespace {
    constructor(pre, ns, p) {
        this.isXPathNamespace = true;
        this.nodeName = '#namespace';
        this.appendChild = unsupported;
        this.cloneNode = unsupported;
        this.compareDocumentPosition = unsupported;
        this.contains = unsupported;
        this.getRootNode = unsupported;
        this.hasChildNodes = unsupported;
        this.insertBefore = unsupported;
        this.isDefaultNamespace = unsupported;
        this.isEqualNode = unsupported;
        this.isSameNode = unsupported;
        this.lookupNamespaceURI = unsupported;
        this.lookupPrefix = unsupported;
        this.normalize = unsupported;
        this.removeChild = unsupported;
        this.replaceChild = unsupported;
        this.addEventListener = unsupported;
        this.dispatchEvent = unsupported;
        this.removeEventListener = unsupported;
        this.isXPathNamespace = true;
        this.ownerDocument = p.ownerDocument;
        this.nodeName = '#namespace';
        this.prefix = pre;
        this.localName = pre;
        this.namespaceURI = ns;
        this.nodeValue = ns;
        this.ownerElement = p;
        this.nodeType = XPathNamespace.XPATH_NAMESPACE_NODE;
    }
    toString() {
        return '{ "' + this.prefix + '", "' + this.namespaceURI + '" }';
    }
}
XPathNamespace.XPATH_NAMESPACE_NODE = 13;
exports.XPathNamespace = XPathNamespace;
function unsupported() {
    throw new Error('Unsupported');
}
//# sourceMappingURL=xpath-namespace.js.map