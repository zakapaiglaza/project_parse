import { XPath } from './xpath';
export declare class XPathParser {
    static actionTable: string[];
    static actionTableNumber: string[];
    static gotoTable: string[];
    static productions: number[][];
    static DOUBLEDOT: number;
    static DOUBLECOLON: number;
    static DOUBLESLASH: number;
    static NOTEQUAL: number;
    static LESSTHANOREQUAL: number;
    static GREATERTHANOREQUAL: number;
    static AND: number;
    static OR: number;
    static MOD: number;
    static DIV: number;
    static MULTIPLYOPERATOR: number;
    static FUNCTIONNAME: number;
    static AXISNAME: number;
    static LITERAL: number;
    static NUMBER: number;
    static ASTERISKNAMETEST: number;
    static QNAME: number;
    static NCNAMECOLONASTERISK: number;
    static NODETYPE: number;
    static PROCESSINGINSTRUCTIONWITHLITERAL: number;
    static EQUALS: number;
    static LESSTHAN: number;
    static GREATERTHAN: number;
    static PLUS: number;
    static MINUS: number;
    static BAR: number;
    static SLASH: number;
    static LEFTPARENTHESIS: number;
    static RIGHTPARENTHESIS: number;
    static COMMA: number;
    static AT: number;
    static LEFTBRACKET: number;
    static RIGHTBRACKET: number;
    static DOT: number;
    static DOLLAR: number;
    static SHIFT: string;
    static REDUCE: string;
    static ACCEPT: string;
    reduceActions: Array<(rhs: any[]) => any>;
    constructor();
    tokenize(s1: string): [number[], string[]];
    parse(str: string): XPath;
}
