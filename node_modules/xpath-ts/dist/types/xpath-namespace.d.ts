export declare class XPathNamespace implements Node {
    static XPATH_NAMESPACE_NODE: number;
    isXPathNamespace: boolean;
    ownerDocument: Document | null;
    nodeName: string;
    prefix: string;
    localName: string;
    namespaceURI: string;
    nodeValue: string;
    ownerElement: Element;
    nodeType: number;
    constructor(pre: string, ns: string, p: Element);
    toString(): string;
    /**
     * Unused and unsupported properties
     */
    readonly baseURI: string;
    readonly childNodes: NodeListOf<ChildNode>;
    readonly firstChild: ChildNode | null;
    readonly isConnected: boolean;
    readonly lastChild: ChildNode | null;
    readonly nextSibling: ChildNode | null;
    readonly parentElement: HTMLElement | null;
    readonly parentNode: Node & ParentNode | null;
    readonly previousSibling: Node | null;
    textContent: string | null;
    appendChild: typeof unsupported;
    cloneNode: typeof unsupported;
    compareDocumentPosition: typeof unsupported;
    contains: typeof unsupported;
    getRootNode: typeof unsupported;
    hasChildNodes: typeof unsupported;
    insertBefore: typeof unsupported;
    isDefaultNamespace: typeof unsupported;
    isEqualNode: typeof unsupported;
    isSameNode: typeof unsupported;
    lookupNamespaceURI: typeof unsupported;
    lookupPrefix: typeof unsupported;
    normalize: typeof unsupported;
    removeChild: typeof unsupported;
    replaceChild: typeof unsupported;
    readonly ATTRIBUTE_NODE: number;
    readonly CDATA_SECTION_NODE: number;
    readonly COMMENT_NODE: number;
    readonly DOCUMENT_FRAGMENT_NODE: number;
    readonly DOCUMENT_NODE: number;
    readonly DOCUMENT_POSITION_CONTAINED_BY: number;
    readonly DOCUMENT_POSITION_CONTAINS: number;
    readonly DOCUMENT_POSITION_DISCONNECTED: number;
    readonly DOCUMENT_POSITION_FOLLOWING: number;
    readonly DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: number;
    readonly DOCUMENT_POSITION_PRECEDING: number;
    readonly DOCUMENT_TYPE_NODE: number;
    readonly ELEMENT_NODE: number;
    readonly ENTITY_NODE: number;
    readonly ENTITY_REFERENCE_NODE: number;
    readonly NOTATION_NODE: number;
    readonly PROCESSING_INSTRUCTION_NODE: number;
    readonly TEXT_NODE: number;
    addEventListener: typeof unsupported;
    dispatchEvent: typeof unsupported;
    removeEventListener: typeof unsupported;
}
declare function unsupported(): any;
export {};
