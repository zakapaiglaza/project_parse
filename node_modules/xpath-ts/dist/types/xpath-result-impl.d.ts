import { Expression } from './xpath-types';
export declare class XPathResultImpl implements XPathResult {
    static readonly ANY_TYPE = 0;
    static NUMBER_TYPE: number;
    static STRING_TYPE: number;
    static BOOLEAN_TYPE: number;
    static UNORDERED_NODE_ITERATOR_TYPE: number;
    static ORDERED_NODE_ITERATOR_TYPE: number;
    static UNORDERED_NODE_SNAPSHOT_TYPE: number;
    static ORDERED_NODE_SNAPSHOT_TYPE: number;
    static ANY_UNORDERED_NODE_TYPE: number;
    static FIRST_ORDERED_NODE_TYPE: number;
    resultType: number;
    numberValue: number;
    stringValue: string;
    booleanValue: boolean;
    nodes: Node[];
    singleNodeValue: Node;
    invalidIteratorState: boolean;
    iteratorIndex: number;
    snapshotLength: number;
    ANY_TYPE: number;
    NUMBER_TYPE: number;
    STRING_TYPE: number;
    BOOLEAN_TYPE: number;
    UNORDERED_NODE_ITERATOR_TYPE: number;
    ORDERED_NODE_ITERATOR_TYPE: number;
    UNORDERED_NODE_SNAPSHOT_TYPE: number;
    ORDERED_NODE_SNAPSHOT_TYPE: number;
    ANY_UNORDERED_NODE_TYPE: number;
    FIRST_ORDERED_NODE_TYPE: number;
    constructor(v: Expression, t: number);
    iterateNext(): Node;
    snapshotItem(i: number): Node;
}
